name: Build and Push on DockerHub

on:
  push:
    branches:
      - main

jobs:
  initialize:
    name: Set required variables
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Set Global Variables
        id: global_vars
        run: |
          echo "::set-output name=channel::${GITHUB_REF##*/}"
          echo "::set-output name=build_time::$( date +%Y%m%d)"
          echo "::set-output name=image_name::$(echo ${GITHUB_REPOSITORY##*/} | tr "[:upper:]" "[:lower:]")"
    outputs:
      channel: ${{ steps.global_vars.outputs.channel }}
      build_time: ${{ steps.global_vars.outputs.build_time }}
      image_name: ${{ steps.global_vars.outputs.image_name }}

  buildx:
    needs: [initialize]
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    environment: production
    if: ${{ always() && contains(needs.*.result, 'success') && !(contains(needs.*.result, 'failure')) }}

    env:
      image_name: ${{ needs.initialize.outputs.image_name }}
      channel: ${{ needs.initialize.outputs.channel }}
      build_time: ${{ needs.initialize.outputs.build_time }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Build Tag
        id: create_build_tag
        run: |
          echo "::set-output name=build_tag::${{ env.build_time }}-${{ env.channel }}-${{ github.run_number }}"

      - name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=docker.io/${{ secrets.DOCKER_USERNAME }}/${{ env.image_name }}
          VERSION=${{ steps.prepare.outputs.build_tag }}
          DOCKER_PLATFORMS=linux/amd64,linux/arm/v7,linux/arm64

          TAGS="${DOCKER_IMAGE}:${VERSION}, ${DOCKER_IMAGE}:latest"

          sed -i 's/_TELEGRAM_TOKEN_/${{ secrets.TELEGRAM_TOKEN }}/g' ./bot.py

          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=platforms::${DOCKER_PLATFORMS}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: success()
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          platforms: ${{ steps.prepare.outputs.platforms }}
          push: true
          tags: ${{ steps.prepare.outputs.tags }}

      # - name: Docker Buildx (push)
      #   if: success()
      #   run: |
      #     docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}
