name: Build and Push on DockerHub

on:
  push:
    branches:
      - main

env:
  IMAGE: ${{ github.repository }}

jobs:
  initialize:
    runs-on: ubuntu-latest
    steps:
      - name: Set Global Variables
        id: global_vars
        run: |
          echo "::set-output name=channel::${GITHUB_REF##*/}"
          echo "::set-output name=build_time::$( date +%Y%m%d%H%M%S)"
          echo "::set-output name=image_name::${GITHUB_REPOSITORY##*/}"
    outputs:
      channel: ${{ steps.global_vars.outputs.channel }}
      build_time: ${{ steps.global_vars.outputs.build_time }}
      image_name: ${{ steps.global_vars.outputs.image_name }}

  push_to_registry:
    needs: [initialize]
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    if: ${{ always() && contains(needs.*.result, 'success') && !(contains(needs.*.result, 'failure')) }}
    
    env:
      image_name: ${{ needs.initialize.outputs.image_name }}
      channel: ${{ needs.initialize.outputs.channel }}
      build_time: ${{ needs.initialize.outputs.build_time }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Setup Build Tag
        id: create_build_tag
        run: |
          echo "build_tag=${{ env.build_time }}-${{ env.channel }}-${{ github.run_number }}" >> $GITHUB_ENV
          echo "::set-output name=build_tag::${{ env.build_time }}-${{ env.channel }}-${{ github.run_number }}"

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: palateo93/${{ env.IMAGE }}
          tags: |
            type=sha
      
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: docker.io/${{ secrets.DOCKER_USERNAME }}/${{ env.image_name.lowercase }}:${{ env.build_tag }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}


# jobs:
#   push_to_registry:
#     name: Push Docker image to Docker Hub
#     runs-on: ubuntu-latest
#     steps:
#       - name: Check out the repo
#         uses: actions/checkout@v2
      
#       - name: Log in to Docker Hub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}
      
#       - name: Extract metadata (tags, labels) for Docker
#         id: meta
#         uses: docker/metadata-action@v3
#         with:
#           images: "${{ env.IMAGE }}"
#           tags: |
#             type=sha
      
#       - name: Build and push Docker image
#         uses: docker/build-push-action@v2
#         with:
#           context: .
#           push: true
#           tags: ${{ steps.meta.outputs.tags }}
#           labels: ${{ steps.meta.outputs.labels }}
#           build-args: |
#             BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
#             VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
#             REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
